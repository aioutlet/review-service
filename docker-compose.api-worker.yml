version: "3.8"

# Docker Compose configuration for Review Service with API and Worker separation
# This demonstrates the monorepo pattern with independent scaling

services:
  # =============================================================================
  # REVIEW SERVICE - API (HTTP Server)
  # =============================================================================
  review-service-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: review-service-api
    ports:
      - "3005:3005"
    environment:
      NODE_ENV: development
      SERVICE_TYPE: api
      PORT: 3005
      HOST: 0.0.0.0
      SERVICE_NAME: review-service-api
      SERVICE_VERSION: 1.0.0

      # Database Configuration
      MONGODB_URI: mongodb://admin:admin123@host.docker.internal:27018/review_service_local_db?authSource=admin
      REDIS_URL: redis://:redis_dev_pass_123@host.docker.internal:6379/0

      # Message Broker Configuration
      MESSAGE_BROKER_TYPE: rabbitmq
      MESSAGE_BROKER_SERVICE_URL: http://host.docker.internal:4000
      MESSAGE_BROKER_API_KEY: dev-api-key-12345

      # Security
      JWT_SECRET: your-super-secret-jwt-key-for-development-only
      CORS_ORIGINS: http://localhost:3000,http://localhost:3001,http://localhost:3010

      # Logging
      LOG_LEVEL: debug
      LOG_FORMAT: json
      LOG_TO_CONSOLE: "true"

      # Observability
      ENABLE_TRACING: "true"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://host.docker.internal:4318/v1/traces
      CORRELATION_ID_HEADER: x-correlation-id

    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:3005/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # =============================================================================
  # REVIEW SERVICE - WORKER (Message Consumer)
  # =============================================================================
  review-service-worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: review-service-worker
    environment:
      NODE_ENV: development
      SERVICE_TYPE: worker
      SERVICE_NAME: review-service-worker
      SERVICE_VERSION: 1.0.0

      # Database Configuration
      MONGODB_URI: mongodb://admin:admin123@host.docker.internal:27018/review_service_local_db?authSource=admin
      REDIS_URL: redis://:redis_dev_pass_123@host.docker.internal:6379/0

      # Message Broker Configuration
      MESSAGE_BROKER_TYPE: rabbitmq
      RABBITMQ_URL: amqp://admin:admin123@host.docker.internal:5672
      MESSAGE_BROKER_QUEUE: review-service.queue

      # Worker Configuration
      WORKER_CONCURRENCY: 10
      WORKER_PREFETCH: 50
      WORKER_RETRY_ENABLED: "true"
      WORKER_RETRY_MAX_ATTEMPTS: 3

      # Logging
      LOG_LEVEL: debug
      LOG_FORMAT: json
      LOG_TO_CONSOLE: "true"

      # Observability
      ENABLE_TRACING: "true"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://host.docker.internal:4318/v1/traces
      CORRELATION_ID_HEADER: x-correlation-id

    healthcheck:
      test:
        [
          "CMD",
          "ps",
          "aux",
          "|",
          "grep",
          "-v",
          "grep",
          "|",
          "grep",
          "worker.js",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    # Scale workers independently for high load
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: "2.0"
          memory: 2G
        reservations:
          cpus: "1.0"
          memory: 1G

  # =============================================================================
  # WORKER SCALE SIMULATION (Additional worker instances)
  # =============================================================================
  review-service-worker-2:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: review-service-worker-2
    environment:
      NODE_ENV: development
      SERVICE_TYPE: worker
      SERVICE_NAME: review-service-worker-2
      SERVICE_VERSION: 1.0.0
      MONGODB_URI: mongodb://admin:admin123@host.docker.internal:27018/review_service_local_db?authSource=admin
      REDIS_URL: redis://:redis_dev_pass_123@host.docker.internal:6379/0
      MESSAGE_BROKER_TYPE: rabbitmq
      RABBITMQ_URL: amqp://admin:admin123@host.docker.internal:5672
      MESSAGE_BROKER_QUEUE: review-service.queue
      WORKER_CONCURRENCY: 10
      LOG_LEVEL: debug
    restart: unless-stopped
    profiles:
      - scale # Only start with: docker-compose --profile scale up

  review-service-worker-3:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: review-service-worker-3
    environment:
      NODE_ENV: development
      SERVICE_TYPE: worker
      SERVICE_NAME: review-service-worker-3
      SERVICE_VERSION: 1.0.0
      MONGODB_URI: mongodb://admin:admin123@host.docker.internal:27018/review_service_local_db?authSource=admin
      REDIS_URL: redis://:redis_dev_pass_123@host.docker.internal:6379/0
      MESSAGE_BROKER_TYPE: rabbitmq
      RABBITMQ_URL: amqp://admin:admin123@host.docker.internal:5672
      MESSAGE_BROKER_QUEUE: review-service.queue
      WORKER_CONCURRENCY: 10
      LOG_LEVEL: debug
    restart: unless-stopped
    profiles:
      - scale # Only start with: docker-compose --profile scale up
